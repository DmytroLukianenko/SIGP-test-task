{"version":3,"sources":["components/Redux/actions/filmsActions.js","components/Redux/operations/filmsOperations.js","components/Redux/selectors/filmsSelectors.js","components/pages/favorite/favoriteFilmsPage.js","components/pages/searchFilms/searchFilmsPage.js","components/pages/details/detailsPage.js","components/Header.js","App.js","components/Redux/reducers/filmsReducer.js","components/Redux/store.js","index.js"],"names":["actions","addQuery","createAction","queryRequest","querySuccess","querryErorr","addFavoriteFilm","loadMoreRequest","loadMoreSuccess","loadMoreError","deleteFilm","detailInfoRequest","detailInfoSuccess","detailInfoError","URL","detailInfo","id","dispatch","a","axios","get","response","data","message","selectors","query","state","filmsReducer","queryFilms","myFilms","filmById","FavoriteFilms","history","useHistory","useDispatch","useSelector","handleClick","e","localName","target","push","Container","fluid","length","ListGroup","as","className","map","f","ListGroupItem","action","onClick","imdbID","alt","src","Poster","Title","Type","Year","Button","variant","xmlns","width","height","fill","viewBox","d","fillRule","Alert","Heading","connect","useState","page","setPage","films","search","Form","onSubmit","preventDefault","toast","warning","Search","Error","queryError","Row","Col","sm","Control","value","placeholder","onChange","type","film","Card","bg","border","text","event","Img","Body","find","addFavFilm","Text","getMoreFilms","DetailsPage","details","goBack","Plot","Rated","Released","Runtime","Genre","Director","Writer","Actors","Language","Country","Awards","imdbRating","imdbVotes","Website","Response","Header","Navbar","Nav","to","Link","App","exact","path","component","SearchFilms","createReducer","error","filmsActions","payload","filter","combineReducers","store","configureStore","reducer","rootReducer","middleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.497acd2d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst addQuery = createAction('addQuery')\r\n\r\nconst queryRequest = createAction('queryFilm/getRequest')\r\nconst querySuccess = createAction('queryFilm/getSuccess')\r\nconst querryErorr = createAction('queryFilm/getError')\r\n\r\nconst addFavoriteFilm = createAction('addFavorite/success')\r\n\r\nconst loadMoreRequest = createAction('loadMore/request')\r\nconst loadMoreSuccess = createAction('loadMore/success')\r\nconst loadMoreError = createAction('loadMore/error')\r\n\r\nconst deleteFilm = createAction('deleteFilm')\r\n\r\nconst detailInfoRequest = createAction('detail/request')\r\nconst detailInfoSuccess = createAction('detail/success')\r\nconst detailInfoError = createAction('detail/error')\r\n\r\nconst actions = {\r\n    addQuery,\r\n    queryRequest,\r\n    querySuccess,\r\n    querryErorr,\r\n    addFavoriteFilm,\r\n    loadMoreRequest,\r\n    loadMoreSuccess,\r\n    loadMoreError,\r\n    deleteFilm,\r\n    detailInfoRequest,\r\n    detailInfoSuccess,\r\n    detailInfoError,\r\n}\r\nexport default actions","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport actions from '../actions/filmsActions'\r\n\r\nconst API_KEY = '4b446f68'\r\nconst URL = `https://omdbapi.com/?apikey=${API_KEY}`\r\n\r\nexport const getQueryFilm = (query) => async dispatch => {\r\n    dispatch(actions.queryRequest())\r\n    try {\r\n        const response = await axios.get(`${URL}&s=${query}`)\r\n        response.data.Search ? dispatch(actions.querySuccess(response.data)) : toast.warning(response.data.Error)\r\n    } catch (error) {\r\n        dispatch(actions.queryError(error))\r\n    }\r\n}\r\n\r\nexport const getMoreFilms = (page, query) => async dispatch => {\r\n    dispatch(actions.loadMoreRequest())\r\n    try {\r\n        const response = await axios.get(`${URL}&s=${query}&page=${page}`)\r\n        dispatch(actions.loadMoreSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(actions.loadMoreError(error))\r\n    }\r\n}\r\n\r\nexport const detailInfo = (id) => async dispatch => {\r\n    dispatch(actions.detailInfoRequest())\r\n    try {\r\n        const response = await axios.get(`${URL}&i=${id}`)\r\n        dispatch(actions.detailInfoSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(actions.detailInfoError(error.message))\r\n    }\r\n}\r\n","const query = state => state.filmsReducer.query\r\nconst queryFilms = state => state.filmsReducer.queryFilms\r\nconst myFilms = state => state.filmsReducer.myFilms\r\nconst filmById = state => state.filmsReducer.filmById\r\n// const filmTtitle = state => state.filmsReducer.queryFilms.Title\r\n// const filmYear = state => state.filmsReducer.queryFilms.filmYear\r\n// const filmImdbID = state => state.filmsReducer.queryFilms.imdbID\r\n// const filmType = state => state.filmsReducer.queryFilms.Type\r\n// const filmPoster = state => state.filmsReducer.queryFilms.Poster\r\n\r\nconst selectors = {\r\n    query,\r\n    queryFilms,\r\n    myFilms,\r\n    filmById\r\n}\r\nexport default selectors","import { ListGroupItem, ListGroup, Button, Container, Alert } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport actions from \"../../Redux/actions/filmsActions\"\r\nimport { detailInfo } from \"../../Redux/operations/filmsOperations\"\r\nimport selectors from \"../../Redux/selectors/filmsSelectors\"\r\n\r\nexport default function FavoriteFilms() {\r\n    const history = useHistory('')\r\n    const dispatch = useDispatch('')\r\n    const myFilms = useSelector(selectors.myFilms)\r\n\r\n    const handleClick = async (e, id) => {\r\n        const { localName } = e.target\r\n        if (localName === 'button' || localName === 'svg' || localName === 'path') {\r\n            dispatch(actions.deleteFilm(id))\r\n        } else {\r\n            dispatch(detailInfo(id))\r\n            history.push('/details')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <h2>My favorite films:</h2>\r\n                {myFilms.length > 0 ?\r\n                    <ListGroup as=\"ul\" className=\"mt-3 justify-content-center\">\r\n                        {myFilms?.map(f =>\r\n                            <ListGroupItem action key={f.imdbID} className='mt-3 border-3 d-flex align-items-center' as='li' onClick={(e) => handleClick(e, f.imdbID)}>\r\n                                <div className='w-25'><img alt='' className=\"ms-4 w-25\" src={f.Poster}></img></div>\r\n                                <div className=\"ms-4 w-25\">Title: {f.Title}</div>\r\n                                <div className=\"ms-4 w-25\">Type: {f.Type}</div>\r\n                                <div className=\"ms-4 me-auto\" >Year: {f.Year}</div>\r\n                                <Button onClick={(e) => handleClick(e, f.imdbID)} variant='outline-danger' className='h-25'>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                        <path fillRule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                    </svg>\r\n                                </Button>\r\n                            </ListGroupItem>\r\n                        )\r\n                        }\r\n                    </ListGroup>\r\n                    :\r\n                    <Alert variant=\"warning\" className='mt-2 text-center'>\r\n                        <Alert.Heading>You still don't have any favorite film's</Alert.Heading>\r\n                    </Alert>\r\n                }\r\n\r\n            </Container >\r\n\r\n        </>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { Button, Form, Col, Row, Card, Container } from 'react-bootstrap'\r\nimport { connect, useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { getQueryFilm, getMoreFilms, detailInfo } from '../../Redux/operations/filmsOperations'\r\nimport selectors from '../../Redux/selectors/filmsSelectors'\r\nimport actions from '../../Redux/actions/filmsActions'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst SearchFilms = () => {\r\n    const [page, setPage] = useState(2)\r\n    const dispatch = useDispatch('')\r\n    const history = useHistory('')\r\n    const films = useSelector(selectors.queryFilms)\r\n    const myFilms = useSelector(selectors.myFilms)\r\n    const search = useSelector(selectors.query)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!search.length) {\r\n            return toast.warning(`Search should contain at least 1 symbol`)\r\n        }\r\n        dispatch(getQueryFilm(search))\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { value } = e.target\r\n        dispatch(actions.addQuery(value))\r\n    }\r\n\r\n    const addFavFilm = (film) => {\r\n        if (!myFilms.find(f => f.imdbID === film.imdbID)) {\r\n            dispatch(actions.addFavoriteFilm(film))\r\n        } else {\r\n            dispatch(actions.deleteFilm(film.imdbID))\r\n        }\r\n    }\r\n\r\n    const loadMore = () => {\r\n        setPage(page + 1)\r\n        dispatch(getMoreFilms(page, search))\r\n    }\r\n\r\n    const handleClick = (e, id) => {\r\n        const { localName } = e.target\r\n        if (localName === 'svg' || localName === 'path') {\r\n            return\r\n        } else {\r\n            dispatch(detailInfo(id))\r\n            history.push('/details')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Row className='mt-4 center'>\r\n                        <Col sm='10'><Form.Control value={search} placeholder='Enter title of movie your are looking for' onChange={handleInputChange} /></Col>\r\n                        <Col >\r\n                            <Button type=\"submit\" variant='warning'>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill='white' viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                                </svg>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                <Row sm='12'>\r\n                    {films && films.map(film =>\r\n                        <Col key={film.imdbID} sm='4'>\r\n                            <Card id={film.imdbID} bg='dark' border='secondary' text='light' className='mt-5 h-100' onClick={(event) => handleClick(event, film.imdbID)}>\r\n                                <Card.Img variant=\"top\" src={film.Poster} />\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col sm='10'><Card.Title>Title: {film.Title}</Card.Title></Col>\r\n                                        <Col onClick={() => addFavFilm(film)} sm='2' className='justify-content-right' >\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill={myFilms.find(f => f.imdbID === film.imdbID) ? 'orange' : 'white'} viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n                                            </svg>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Card.Text>Year: {film.Year}</Card.Text>\r\n                                    <Card.Text>Type: {film.Type}</Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>)}\r\n                    {films.length > 0 && <Button variant='warning' className='mt-5' onClick={loadMore}>Load More</Button>}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect()(SearchFilms)","import { Card, ListGroup, ListGroupItem, Row, Col, Container, Button } from \"react-bootstrap\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router\"\r\nimport selectors from \"../../Redux/selectors/filmsSelectors\"\r\n\r\nexport default function DetailsPage() {\r\n    const history = useHistory('')\r\n    const details = useSelector(selectors.filmById)\r\n\r\n    return (\r\n        <Container>\r\n            <Button variant='secondary' onClick={() => history.goBack()} className='mt-3 float-right'>Back</Button>\r\n            <Card className='mt-3 border-3 c'>\r\n                <Row>\r\n                    <Col sm='4'>\r\n                        <Card.Img variant=\"left\" src={details.Poster} />\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Body>\r\n                            <Card.Title>{details.Title}</Card.Title>\r\n                            <Card.Text>{details.Plot}</Card.Text>\r\n                            <Card.Text>{details.Type}</Card.Text>\r\n                        </Card.Body>\r\n                        <ListGroup className=\"list-group-flush\">\r\n                            <ListGroupItem>Year: {details.Year}</ListGroupItem>\r\n                            <ListGroupItem>Rated: {details.Rated}</ListGroupItem>\r\n                            <ListGroupItem>Released: {details.Released}</ListGroupItem>\r\n                            <ListGroupItem>Runtime: {details.Runtime}</ListGroupItem>\r\n                            <ListGroupItem>Genre: {details.Genre}</ListGroupItem>\r\n                            <ListGroupItem>Director: {details.Director}</ListGroupItem>\r\n                            <ListGroupItem>Writer: {details.Writer}</ListGroupItem>\r\n                            <ListGroupItem>Actors: {details.Actors}</ListGroupItem>\r\n                            <ListGroupItem>Language: {details.Language}</ListGroupItem>\r\n                            <ListGroupItem>Country: {details.Country}</ListGroupItem>\r\n                            <ListGroupItem>Awards: {details.Awards}</ListGroupItem>\r\n                            <ListGroupItem>imdbRating: {details.imdbRating}</ListGroupItem>\r\n                            <ListGroupItem>imdbVotes: {details.imdbVotes}</ListGroupItem>\r\n                            <ListGroupItem>Website: {details.Website}</ListGroupItem>\r\n                            <ListGroupItem>Response: {details.Response}</ListGroupItem>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}","import { Navbar, Container, Nav } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Nav className=\"me-auto\">\r\n                        <LinkContainer className='p-2' to='/'><Nav.Link >Search\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n                            </svg>\r\n                        </Nav.Link></LinkContainer>\r\n                        <LinkContainer to='/favorite'><Nav.Link >Favorite</Nav.Link></LinkContainer>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}","// import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport FavoriteFilms from './components/pages/favorite/favoriteFilmsPage';\nimport SearchFilms from './components/pages/searchFilms/searchFilmsPage';\nimport DetailsPage from './components/pages/details/detailsPage';\nimport Header from './components/Header';\nimport { ToastContainer } from 'react-toastify';\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={SearchFilms} />\n          <Route path=\"/details\" component={DetailsPage} />\n          <Route path=\"/favorite\" component={FavoriteFilms} />\n        </Switch>\n      </Router>\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { combineReducers } from 'redux'\r\nimport filmsActions from '../actions/filmsActions'\r\n\r\nconst filmsInitialState = {\r\n    query: '',\r\n    queryFilms: [],\r\n    error: '',\r\n    filmById: {},\r\n    myFilms: [],\r\n}\r\n\r\nconst filmsReducer = createReducer(\r\n    { ...filmsInitialState },\r\n    {\r\n        [filmsActions.addQuery]: (state, { payload }) => ({ ...state, query: payload }),\r\n        [filmsActions.querySuccess]: (state, { payload }) => ({ ...state, queryFilms: [...payload.Search] }),\r\n        [filmsActions.addFavoriteFilm]: (state, { payload }) => ({ ...state, myFilms: [...state.myFilms, { ...payload }] }),\r\n        [filmsActions.loadMoreSuccess]: (state, { payload }) => ({ ...state, queryFilms: [...state.queryFilms, ...payload.Search] }),\r\n        [filmsActions.deleteFilm]: (state, { payload }) => ({ ...state, myFilms: state.myFilms.filter(f => f.imdbID !== payload) }),\r\n        [filmsActions.detailInfoSuccess]: (state, { payload }) => ({ ...state, filmById: payload }),\r\n    }\r\n)\r\n\r\nexport default combineReducers({\r\n    filmsReducer,\r\n})","import { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from '../Redux/reducers/filmsReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: [thunk],\r\n})\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Provider } from 'react-redux'\nimport store from './components/Redux/store';\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}